{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar utils = require('./utils');\n\nvar smooth = require('./smooth');\n\nvar cancelEvents = require('./cancel-events');\n\nvar events = require('./scroll-events');\n/*\r\n * Gets the easing type from the smooth prop within options.\r\n */\n\n\nvar getAnimationType = function getAnimationType(options) {\n  return smooth[options.smooth] || smooth.defaultEasing;\n};\n/*\r\n * Function helper\r\n */\n\n\nvar functionWrapper = function functionWrapper(value) {\n  return typeof value === 'function' ? value : function () {\n    return value;\n  };\n};\n/*\r\n * Wraps window properties to allow server side rendering\r\n */\n\n\nvar currentWindowProperties = function currentWindowProperties() {\n  if (typeof window !== 'undefined') {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame;\n  }\n};\n/*\r\n * Helper function to never extend 60fps on the webpage.\r\n */\n\n\nvar requestAnimationFrameHelper = function () {\n  return currentWindowProperties() || function (callback, element, delay) {\n    window.setTimeout(callback, delay || 1000 / 60, new Date().getTime());\n  };\n}();\n\nvar __currentPositionY = 0;\nvar __startPositionY = 0;\nvar __targetPositionY = 0;\nvar __progress = 0;\nvar __duration = 0;\nvar __cancel = false;\n\nvar __target = void 0;\n\nvar __containerElement = void 0;\n\nvar __to = void 0;\n\nvar __start = void 0;\n\nvar __deltaTop = void 0;\n\nvar __percent = void 0;\n\nvar __delayTimeout = void 0;\n\ncancelEvents.subscribe(function () {\n  __cancel = true;\n});\n\nvar currentPositionY = function currentPositionY() {\n  if (__containerElement && __containerElement !== document && __containerElement !== document.body) {\n    return __containerElement.scrollTop;\n  } else {\n    var supportPageOffset = window.pageXOffset !== undefined;\n    var isCSS1Compat = (document.compatMode || \"\") === \"CSS1Compat\";\n    return supportPageOffset ? window.pageYOffset : isCSS1Compat ? document.documentElement.scrollTop : document.body.scrollTop;\n  }\n};\n\nvar scrollContainerHeight = function scrollContainerHeight() {\n  if (__containerElement && __containerElement !== document && __containerElement !== document.body) {\n    return Math.max(__containerElement.scrollHeight, __containerElement.offsetHeight, __containerElement.clientHeight);\n  } else {\n    var body = document.body;\n    var html = document.documentElement;\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n};\n\nvar animateScroll = function animateScroll(easing, options, timestamp) {\n  // Cancel on specific events\n  if (!options.ignoreCancelEvents && __cancel) {\n    if (events.registered['end']) {\n      events.registered['end'](__to, __target, __currentPositionY);\n    }\n\n    return;\n  }\n\n  ;\n  __deltaTop = Math.round(__targetPositionY - __startPositionY);\n\n  if (__start === null) {\n    __start = timestamp;\n  }\n\n  __progress = timestamp - __start;\n  __percent = __progress >= __duration ? 1 : easing(__progress / __duration);\n  __currentPositionY = __startPositionY + Math.ceil(__deltaTop * __percent);\n\n  if (__containerElement && __containerElement !== document && __containerElement !== document.body) {\n    __containerElement.scrollTop = __currentPositionY;\n  } else {\n    window.scrollTo(0, __currentPositionY);\n  }\n\n  if (__percent < 1) {\n    var easedAnimate = animateScroll.bind(null, easing, options);\n    requestAnimationFrameHelper.call(window, easedAnimate);\n    return;\n  }\n\n  if (events.registered['end']) {\n    events.registered['end'](__to, __target, __currentPositionY);\n  }\n};\n\nvar setContainer = function setContainer(options) {\n  __containerElement = !options ? null : options.containerId ? document.getElementById(options.containerId) : options.container && options.container.nodeType ? options.container : document;\n};\n\nvar animateTopScroll = function animateTopScroll(y, options, to, target) {\n  window.clearTimeout(__delayTimeout);\n  setContainer(options);\n  __start = null;\n  __cancel = false;\n  __startPositionY = currentPositionY();\n  __targetPositionY = options.absolute ? y : y + __startPositionY;\n\n  if (__startPositionY === __targetPositionY) {\n    if (events.registered['end']) {\n      events.registered['end'](__to, __target, __currentPositionY);\n    }\n\n    return;\n  }\n\n  __deltaTop = Math.round(__targetPositionY - __startPositionY);\n  __duration = functionWrapper(options.duration)(__deltaTop);\n  __duration = isNaN(parseFloat(__duration)) ? 1000 : parseFloat(__duration);\n  __to = to;\n  __target = target;\n  var easing = getAnimationType(options);\n  var easedAnimate = animateScroll.bind(null, easing, options);\n\n  if (options && options.delay > 0) {\n    __delayTimeout = window.setTimeout(function () {\n      requestAnimationFrameHelper.call(window, easedAnimate);\n    }, options.delay);\n    return;\n  }\n\n  requestAnimationFrameHelper.call(window, easedAnimate);\n};\n\nvar proceedOptions = function proceedOptions(options) {\n  options = _extends({}, options);\n  options.absolute = true;\n  return options;\n};\n\nvar scrollToTop = function scrollToTop(options) {\n  animateTopScroll(0, proceedOptions(options));\n};\n\nvar scrollTo = function scrollTo(toY, options) {\n  animateTopScroll(toY, proceedOptions(options));\n};\n\nvar scrollToBottom = function scrollToBottom(options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  animateTopScroll(scrollContainerHeight(), options);\n};\n\nvar scrollMore = function scrollMore(toY, options) {\n  options = proceedOptions(options);\n  setContainer(options);\n  animateTopScroll(currentPositionY() + toY, options);\n};\n\nmodule.exports = {\n  animateTopScroll: animateTopScroll,\n  getAnimationType: getAnimationType,\n  scrollToTop: scrollToTop,\n  scrollToBottom: scrollToBottom,\n  scrollTo: scrollTo,\n  scrollMore: scrollMore\n};","map":null,"metadata":{},"sourceType":"script"}